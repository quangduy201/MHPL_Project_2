/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.example.project_2.GUI;

import com.example.project_2.BLL.ThanhVienBLL;
import com.example.project_2.DTO.ThanhVien;
import com.example.project_2.components.dialogs.ExcelDialog;
import com.example.project_2.components.dialogs.Message;
import com.example.project_2.components.dialogs.SuaThongTinTVDialog;
import com.example.project_2.components.table.EventAction;
import com.example.project_2.components.table.ModelAction;
import com.example.project_2.utils.Excel;
import org.apache.commons.lang3.StringUtils;

import javax.swing.*;
import java.util.List;

/**
 *
 * @author Hung
 */
public class ThanhVienGUI extends javax.swing.JPanel {
	private final ThanhVienBLL thanhVienBLL = new ThanhVienBLL();
	private final EventAction<ThanhVien> eventAction = new EventAction<>() {
        @Override
        public void delete(ThanhVien thanhVien) {
            Message modal = new Message(Main.getFrames()[0], true);
            modal.showMessage("Bạn có chắc chắn muốn xóa thành viên " + thanhVien.getMaTV() + "?");

            if (modal.isOk()) {
                thanhVienBLL.delete(thanhVien);
            } else {
                System.out.println("Đã hủy xóa thành viên");
            }
        }

        @Override
        public void update(ThanhVien thanhVien) {
            SuaThongTinTVDialog modal = new SuaThongTinTVDialog(Main.getFrames()[0], true, thanhVien.getMaTV());
            modal.showDialog();

            if (modal.isOk()) {
                loadData();
            }
        }
	};

    /**
     * Creates new form ThanhVienGUI
     */
    public ThanhVienGUI() {
        initComponents();
		loadData();
        setOpaque(false);
    }

	public void loadData() {
		List<ThanhVien> thanhVienList = thanhVienBLL.getAll();
		setTableThanhVien(thanhVienList);
	}

	public void setTableThanhVien(List<ThanhVien> thanhVienList) {
		table.removeAllRow();

		for (var thanhVien : thanhVienList) {
			table.addRow(new Object[]{
				thanhVien.getMaTV(),
				thanhVien.getHoTen(),
				thanhVien.getKhoa(),
				thanhVien.getNganh(),
				thanhVien.getSDT(),
				new ModelAction<>(thanhVien, eventAction)
			});
		}
	}

    private boolean showMessage(String message) {
        Message obj = new Message(Main.getFrames()[0], true);
        obj.showMessage(message);
        return obj.isOk();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbxSearch = new com.example.project_2.components.combobox.ComboBoxSuggestion();
        jPanel1 = new javax.swing.JPanel();
        btnImport = new com.example.project_2.components.swing.Button();
        btnAdd = new com.example.project_2.components.swing.Button();
        btnSearch = new com.example.project_2.components.swing.Button();
        txtSearch = new com.example.project_2.components.swing.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new com.example.project_2.components.table.Table();

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(159, 159, 159));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý thành viên");

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));

        btnImport.setText("Nhập");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Thành Viên", "Họ tên", "Khoa", "Ngành", "Số điện thoại", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        cbxSearch.addItem("Tất cả");
        cbxSearch.addItem("Mã thành viên");
        cbxSearch.addItem("Họ tên");
        cbxSearch.addItem("Khoa");
        cbxSearch.addItem("Ngành");
        cbxSearch.addItem("Số điện thoại");
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            int selectedRow = table.getSelectedRow();

            if (selectedRow != -1) {
                int maTV = Integer.parseInt(table.getValueAt(selectedRow, 0).toString());

                SuaThongTinTVDialog modal = new SuaThongTinTVDialog(Main.getFrames()[0], true, maTV);
                modal.showDialog();

//                loadData();
//                if (modal.isOk()) {
//                    txtSearch.setText("");
//                }
            } else {
                showMessage("Vui lòng chọn thành viên trong bảng.");
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
		ExcelDialog dialog = new ExcelDialog(Main.getFrames()[0], true, List.of(
                List.of("Mã TV", Excel.Type.NUMERIC),
			    List.of("Họ tên", Excel.Type.STRING),
			    List.of("Khoa", Excel.Type.STRING),
			    List.of("Ngành", Excel.Type.STRING),
			    List.of("SĐT", Excel.Type.STRING),
			    List.of("Email", Excel.Type.STRING)
		), row -> {
            long maTV = Long.parseLong(row.get(0));
            String hoTen = StringUtils.capitalize(row.get(1));
            String khoa = row.get(2).toUpperCase();
            String nganh = row.get(3).toUpperCase();
            String sdt = row.get(4);
            String email = row.get(5);
            ThanhVien thanhVien = new ThanhVien(maTV, hoTen, email, "", khoa, nganh, sdt);
            return thanhVienBLL.add(thanhVien);
        });
		dialog.setVisible(true);
        if (!dialog.isCancel()) {
            String title = "Thông báo";
            JOptionPane.showMessageDialog(this, "Nhập dữ liệu thành công.", title, JOptionPane.INFORMATION_MESSAGE);
            loadData();
        }
    }//GEN-LAST:event_btnImportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.example.project_2.components.swing.Button btnAdd;
    private com.example.project_2.components.swing.Button btnImport;
    private com.example.project_2.components.swing.Button btnSearch;
    private com.example.project_2.components.combobox.ComboBoxSuggestion cbxSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.example.project_2.components.table.Table table;
    private com.example.project_2.components.swing.TextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
